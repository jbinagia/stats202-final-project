}
# average final two scores
naive_df$FinalScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
#naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(naive_df[naive_df$PatientID == id,"FinalScore"],naive_df[naive_df$PatientID == id,"SecondToLastScore"]))
}
}
summary(naive_df$PANSS_Total)
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$FinalScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
#naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
#naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(naive_df[naive_df$PatientID == id,"FinalScore"],naive_df[naive_df$PatientID == id,"SecondToLastScore"]))
}
}
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$PANSS_Total = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
#naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
#naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(naive_df[naive_df$PatientID == id,"FinalScore"],naive_df[naive_df$PatientID == id,"SecondToLastScore"]))
}
}
summary(naive_df$PANSS_Total)
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$PANSS_Total = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
#naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(naive_df[naive_df$PatientID == id,"FinalScore"],naive_df[naive_df$PatientID == id,"SecondToLastScore"]))
}
}
summary(naive_df$SecondToLastScore)
summary(naive_df$FinalScore)
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$PANSS_Total = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(naive_df[naive_df$PatientID == id,"FinalScore"],naive_df[naive_df$PatientID == id,"SecondToLastScore"]))
}
}
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$FinalScore = as.numeric(naive_df$FinalScore)
naive_df$PANSS_Total = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(naive_df[naive_df$PatientID == id,"FinalScore"],1))
}
}
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$FinalScore = as.numeric(naive_df$FinalScore)
naive_df$PANSS_Total = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
#naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(naive_df[naive_df$PatientID == id,"FinalScore"],1))
}
}
summary(naive_df$PANSS_Total)
summary(naive_df$FinalScore)
?mean
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$FinalScore = as.numeric(naive_df$FinalScore)
naive_df$PANSS_Total = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(2,1))
}
}
is.na(naive_df$PANSS_Total)
is.na(naive_df$FinalScore)
is.na(naive_df$SecondToLastScore)
naive_df[naive_df$PatientID == id,"FinalScore"]
as.integer(naive_df[naive_df$PatientID == id,"FinalScore"])
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$FinalScore = as.numeric(naive_df$FinalScore)
naive_df$PANSS_Total = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(as.integer(naive_df[naive_df$PatientID == id,"FinalScore"]),1))
}
}
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$FinalScore = as.numeric(naive_df$FinalScore)
naive_df$PANSS_Total = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(as.integer(naive_df[naive_df$PatientID == id,"FinalScore"]),as.integer(naive_df[naive_df$PatientID == id,"SecondToLastScore"])))
}
}
summary(naive_df)
hist(naive_df$FinalScore)
hist(naive_df$PANSS_Total)
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$FinalScore = as.numeric(naive_df$FinalScore)
naive_df$PANSS_Total = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(as.integer(naive_df[naive_df$PatientID == id,"FinalScore"]),as.integer(naive_df[naive_df$PatientID == id,"SecondToLastScore"])))
}
}
# create submission script
write.csv(select_patients_df[,c("PatientID","PANSS_Total")],'less-naive-forecast.csv',row.names=FALSE)
dev_df
dim(naive_df)
#naive_df = subset(E_df, PatientID %in% prediction.patients, select = c("PatientID","VisitDay","PANSS_Total")) # start with study E
#dim(naive_df)[1]
#naive_df = distinct(naive_df) # remove duplicates
#dim(naive_df)[1]
naive_df = subset(dev_df, select = c("PatientID","VisitDay","PANSS_Total")) # start with dev set
names(naive_df)[2] = "LastVisitDay" # rename column
names(naive_df)[3] = "FinalScore" # rename column
# find second to last visit day
for (id in naive_df$PatientID) { # for each unique id
sub_df = subset(E_df, PatientID==id)
x = sub_df$VisitDay
n <- length(x)
if (n==1) {
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = NA
}else{
naive_df[naive_df$PatientID == id,"SecondToLastDay"] = sort(x,partial=n-1)[n-1]
}
}
# find second to last score
naive_df$SecondToLastScore = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = NA
}else{
sub_df = subset(E_df, PatientID==id & VisitDay==day)
if (dim(sub_df)[1] > 1){ # take simple average in this case
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = mean(sub_df$PANSS_Total)
}else{
naive_df[naive_df$PatientID == id,"SecondToLastScore"] = sub_df$PANSS_Total
}
}
}
# average final two scores
naive_df$FinalScore = as.numeric(naive_df$FinalScore)
naive_df$PANSS_Total = as.numeric(naive_df$FinalScore)
for (id in naive_df$PatientID) { # for each unique id
day = as.integer(naive_df[naive_df$PatientID == id,"SecondToLastDay"])
if (is.na(day)){
naive_df[naive_df$PatientID == id,"PANSS_Total"] = naive_df[naive_df$PatientID == id,"FinalScore"]
}else{
naive_df[naive_df$PatientID == id,"PANSS_Total"] = mean(c(as.integer(naive_df[naive_df$PatientID == id,"FinalScore"]),as.integer(naive_df[naive_df$PatientID == id,"SecondToLastScore"])))
}
}
# create submission script
write.csv(naive_df[,c("PatientID","PANSS_Total")],'less-naive-forecast.csv',row.names=FALSE)
