number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
head(count(E_df, vars = "PatientID"))
sorted.patient.ids = sort(E_df$PatientID)
number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
print(count(E_df, vars = "PatientID"))
sorted.patient.ids = sort(E_df$PatientID)
number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
print(count(E_df, vars = "Country"))
rm(list = ls()) # clear global environment
library(dplyr)
sorted.patient.ids = sort(E_df$PatientID)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(dplyr)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
sorted.patient.ids = sort(E_df$PatientID)
number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
print(count(E_df, vars = "Country"))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
sorted.patient.ids = sort(E_df$PatientID)
number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
print(count(E_df, vars = "Country"))
sorted.patient.ids = sort(E_df$PatientID)
number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
print(count(E_df, vars = "PatientID"))
sorted.patient.ids = sort(E_df$PatientID)
number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
number.visits = count(E_df, vars = "PatientID")
sorted.patient.ids = sort(E_df$PatientID)
number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
number.visits = count(E_df, vars = "PatientID")
print(number.visits$freq)
sorted.patient.ids = sort(E_df$PatientID)
number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
number.visits = count(E_df, vars = "PatientID")
hist(number.visits)
sorted.patient.ids = sort(E_df$PatientID)
number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
number.visits = count(E_df, vars = "PatientID")
histogram(number.visits)
sorted.patient.ids = sort(E_df$PatientID)
number.vists = rep(0,length(unique(E_df$PatientID)))
#for (i in seq(1:length(sorted.patient.ids))) {
#  print(patientID)
#}
number.visits = count(E_df, vars = "PatientID")
hist(number.visits)
?hist
number.visits = count(E_df, vars = "PatientID")
# Compute a histogram
qplot(number.visits, geom="histogram")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
number.visits = count(E_df, vars = "PatientID")
# Compute a histogram
qplot(number.visits, geom="histogram")
number.visits = count(E_df, vars = "PatientID")
# Compute a histogram
qplot(number.visits$freq, geom="histogram")
number.visits = count(E_df, vars = "PatientID")
# Compute a histogram
qplot(E_df$PatientID, geom="histogram")
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=feq)) +
geom_bar(stat="identity")
p
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity")
p
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq))
p
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity")
p
?subset
keeps <- c("Country")
#test_df =
#combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub)
A_df = subset(A_df, VisitDay==0)
B_df = subset(B_df, VisitDay==0)
C_df = subset(C_df, VisitDay==0)
D_df = subset(D_df, VisitDay==0)
E_df = subset(E_df, select = c(Country))
keeps <- c("Country")
#test_df =
#combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub)
A_df = subset(A_df, VisitDay==0)
B_df = subset(B_df, VisitDay==0)
C_df = subset(C_df, VisitDay==0)
D_df = subset(D_df, VisitDay==0)
E_df = subset(E_df, select = c(Country))
summary(E_df)
keeps <- c("Country")
#test_df =
#combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub)
A_df = subset(A_df, VisitDay==0)
B_df = subset(B_df, VisitDay==0)
C_df = subset(C_df, VisitDay==0)
D_df = subset(D_df, VisitDay==0)
E_df = subset(E_df, select = c(Country, TxGroup, VisitDay, Study))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity") # meaning of stat option: "If you want the heights of the bars to represent values in the data, use stat="identity" and map a value to the y aesthetic."
p
keeps <- c("Country")
#test_df =
#combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub)
A_df = subset(A_df, VisitDay==0)
B_df = subset(B_df, VisitDay==0)
C_df = subset(C_df, VisitDay==0)
D_df = subset(D_df, VisitDay==0)
E_df = subset(E_df, select = c(Country, TxGroup, VisitDay, Study))
summary(E_df)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity") # meaning of stat option: "If you want the heights of the bars to represent values in the data, use stat="identity" and map a value to the y aesthetic."
p
keeps <- c("Country")
#test_df =
#combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub)
A_df = subset(A_df, VisitDay==0)
B_df = subset(B_df, VisitDay==0)
C_df = subset(C_df, VisitDay==0)
D_df = subset(D_df, VisitDay==0)
E_df = subset(E_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
summary(E_df)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity") # meaning of stat option: "If you want the heights of the bars to represent values in the data, use stat="identity" and map a value to the y aesthetic."
p
keeps <- c("Country")
#test_df =
#combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub)
A_df = subset(A_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
B_df = subset(B_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
C_df = subset(C_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
D_df = subset(D_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
E_df = subset(E_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
summary(E_df)
combined_df = rbind(A_df,B_df,C_df,D_df,E_df)
summary(combined_df)
A_df = subset(A_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
B_df = subset(B_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
C_df = subset(C_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
D_df = subset(D_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
E_df = subset(E_df, select = c(Country, TxGroup, VisitDay, Study,PANSS_Total))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity") # meaning of stat option: "If you want the heights of the bars to represent values in the data, use stat="identity" and map a value to the y aesthetic."
p
A_df = subset(A_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
B_df = subset(B_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
C_df = subset(C_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
D_df = subset(D_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
E_df = subset(E_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
combined_df = rbind(A_df,B_df,C_df,D_df,E_df)
summary(combined_df)
?subset
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(prediction.patients)
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
test_df = subset(E_df, PatientID %in% prediction.patients)
test_df = subset(E_df, PatientID %in% prediction.patients)
dim(test_df)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(prediction.patients)         # 379 values
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
number.visits = count(A_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity") # meaning of stat option: "If you want the heights of the bars to represent values in the data, use stat="identity" and map a value to the y aesthetic."
p
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(prediction.patients)         # 379 values
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
number.visits = count(B_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity") # meaning of stat option: "If you want the heights of the bars to represent values in the data, use stat="identity" and map a value to the y aesthetic."
p
summary(A_df$VisitDay)
107/7
summary(B_df$VisitDay)
215/7
summary(C_df$VisitDay)
162/7
summary(E_df)
unique(E_df$PatientID)
for (id in combined_df$PatientID) {
print(id)
}
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(prediction.patients)         # 379 values
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity") # meaning of stat option: "If you want the heights of the bars to represent values in the data, use stat="identity" and map a value to the y aesthetic."
p
A_df = subset(A_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
B_df = subset(B_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
C_df = subset(C_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
D_df = subset(D_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
E_df = subset(E_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
combined_df = rbind(A_df,B_df,C_df,D_df,E_df)
summary(combined_df)
for (id in combined_df$PatientID) {
print(id)
}
dim(combined_df)
dim(combined_df)[1]
for (i in 1:dim(combined_df)[1]) {
combined_df[i,"FinalDay"] = combined_df[i,"VisitDay"]
}
summary(combined_df$VisitDay)
summary(combined_df$FinalDay)
subset(combined_df,max(VisitDay))
for (i in 1:dim(combined_df)[1]) {
id = combined_df[i,"PatientID"]
print(id)
combined_df[i,"FinalDay"] = subset(combined_df,"VisitDay")
}
for (i in 1:dim(combined_df)[1]) {
id = combined_df[i,"PatientID"]
print(id)
combined_df[i,"FinalDay"] = combined_df[i,"VisitDay"]
}
subset(combined_df,PatientID = 10221)
subset(combined_df,PatientID = 10021)
subset(combined_df,PatientID == 10021)
patient_df = subset(combined_df,PatientID == id)
patient_df
max(patient_df$VisitDay)
for (i in 1:dim(combined_df)[1]) {
id = combined_df[i,"PatientID"]
patient_df = subset(combined_df,PatientID == id)
combined_df[i,"FinalDay"] = max(patient_df$VisitDay)
}
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(prediction.patients)         # 379 values
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity") # meaning of stat option: "If you want the heights of the bars to represent values in the data, use stat="identity" and map a value to the y aesthetic."
p
A_df = subset(A_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
B_df = subset(B_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
C_df = subset(C_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
D_df = subset(D_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
E_df = subset(E_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
combined_df = rbind(A_df,B_df,C_df,D_df,E_df)
summary(combined_df)
for (i in 1:dim(combined_df)[1]) {
id = combined_df[i,"PatientID"]
patient_df = subset(combined_df,PatientID == id)
combined_df[i,"FinalDay"] = max(patient_df$VisitDay)
}
combined_df$FinalDay
summary(combined_df$FinalDay)
summary(combined_df$VisitDay)
for (i in 1:dim(combined_df)[1]) {
id = combined_df[i,"PatientID"]
patient_df = subset(combined_df,PatientID == id)
#combined_df[i,"FinalDay"] = max(patient_df$VisitDay)
}
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(plyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
length(unique(E_df$PatientID))
sample_submission_df = read.csv("Data/sample_submission_PANSS.csv")
prediction.patients = sample_submission_df$PatientID # the PatientID #s we should use for Kaggle submission
length(prediction.patients)         # 379 values
length(unique(prediction.patients)) # 379 distinct values
#n_distinct(prediction.patients)   # gives same result
number.visits = count(E_df, vars = "PatientID")
# Basic barplot
p<-ggplot(data=number.visits, aes(x=PatientID, y=freq)) +
geom_bar(stat="identity") # meaning of stat option: "If you want the heights of the bars to represent values in the data, use stat="identity" and map a value to the y aesthetic."
p
A_df = subset(A_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
B_df = subset(B_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
C_df = subset(C_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
D_df = subset(D_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
E_df = subset(E_df, select = c(PatientID, Country, TxGroup, VisitDay, Study,PANSS_Total))
combined_df = rbind(A_df,B_df,C_df,D_df,E_df)
summary(combined_df)
for (i in 1:dim(combined_df)[1]) {
id = combined_df[i,"PatientID"]
patient_df = subset(combined_df,PatientID == id)
#combined_df[i,"FinalDay"] = max(patient_df$VisitDay)
}
test_df = subset(E_df, PatientID %in% prediction.patients)
dim(test_df)
for (i in 1:dim(combined_df)[1]) {
id = combined_df[i,"PatientID"]
#patient_df = subset(combined_df,PatientID == id)
#combined_df[i,"FinalDay"] = max(patient_df$VisitDay)
}
for (i in 1:dim(combined_df)[1]) {
#id = combined_df[i,"PatientID"]
#patient_df = subset(combined_df,PatientID == id)
#combined_df[i,"FinalDay"] = max(patient_df$VisitDay)
}
