#names(X.train)
h2o.no_progress()
h2o.init()
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
library(dplyr)
library(ggplot2)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
#summary(E_df)
names(E_df)
dim(E_df)[1]
sample_submission_df = read.csv("Data/sample_submission_status.csv")
prediction.ids = sample_submission_df$AssessmentID # the AssessmentID #s we should use for Kaggle submission
length(unique(prediction.ids))
length(prediction.ids)
all(E_df$AssessmentiD==prediction.ids)
A_df = subset(A_df, select = c(Country,TxGroup,VisitDay,PANSS_Total,LeadStatus))
B_df = subset(B_df, select = c(Country,TxGroup,VisitDay,PANSS_Total,LeadStatus))
C_df = subset(C_df, select = c(Country,TxGroup,VisitDay,PANSS_Total,LeadStatus))
D_df = subset(D_df, select = c(Country,TxGroup,VisitDay,PANSS_Total,LeadStatus))
names(E_df)
E_df = subset(E_df, select = c(Country,TxGroup,VisitDay,PANSS_Total,AssessmentiD))
names(E_df)
combined_df = rbind(A_df,B_df,C_df,D_df)
summary(combined_df)
names(combined_df)
dim(combined_df)[1]
combined_df=distinct(combined_df)
dim(combined_df)[1]
combined_df <- mutate_at(combined_df, vars(Country, TxGroup,LeadStatus), as.factor)
str(combined_df) # compactly display structure of the object
E_df<-mutate_at(E_df,vars(Country, TxGroup,AssessmentiD),as.factor)
str(E_df)
combined_df$LeadStatus[combined_df$LeadStatus!="Passed"]<-"Flagged"
combined_df$LeadStatus=factor(combined_df$LeadStatus)
table(combined_df$LeadStatus)
set.seed(1)
tot=1:dim(combined_df)[1] # total number of observations
train=sample(tot,length(tot)*0.7) # put 70% of observations into training set
combined.train=combined_df[train,]
head(combined.train)
dev=tot[-train] # rest go into development set
combined.dev=combined_df[dev,]
test=E_df # study E is the test set
library(dplyr)
library(h2o)
library(caret)
library(corrplot)
Y.train="LeadStatus"
X.train=setdiff(names(combined.train),c(Y.train,"VisitDay"))
#names(X.train)
h2o.no_progress()
h2o.init()
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
?install
intall.packages(hexbin)
install.packages(hexbin)
install.packages("hexbin")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(hexbin)
install.packages("hexbin")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
install.packages("ggrepel")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(ggfortify)
install.packages("ggfortify")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(ggfortify)
library(extrafont)
install.packages("extrafont")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(extrafont)
library(ggfortify)
library(ggsci)
install.packages("ggsci")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(extrafont)
library(ggfortify)
library(ggsci)
library(forecast)
install.packages("ggfortify")
install.packages("ggfortify")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(extrafont)
library(ggfortify)
library(ggsci)
library(forecast)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(ggfortify)
library(extrafont)
library(factoextra)
install.packages("factoextra")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(extrafont)
library(ggfortify)
library(ggsci)
library(forecast)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(extrafont)
library(ggfortify)
library(ggsci)
#library(forecast)
library(zoo)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(extrafont)
library(ggfortify)
library(ggsci)
#library(forecast)
#library(zoo)
library(extrafont)
#font_import()
#loadfonts(device = "win")
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
#remove LeadStatus column
A_sub = A_df[ , -which(names(A_df) %in% c("LeadStatus","AssessmentiD"))]
B_sub = B_df[ , -which(names(B_df) %in% c("LeadStatus","AssessmentiD"))]
C_sub = C_df[ , -which(names(C_df) %in% c("LeadStatus","AssessmentiD"))]
D_sub = D_df[ , -which(names(D_df) %in% c("LeadStatus","AssessmentiD"))]
E_sub = E_df # study E does not have the LeadStatus column!
combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub) # combine datasets
E_df
summary(E_df)
dim(E_df)
dim(D_sub)
#remove LeadStatus column
A_sub = A_df[ , -which(names(A_df) %in% c("LeadStatus"))]
B_sub = B_df[ , -which(names(B_df) %in% c("LeadStatus"))]
C_sub = C_df[ , -which(names(C_df) %in% c("LeadStatus")]
A_sub = A_df[ , -which(names(A_df) %in% c("LeadStatus"))]
#remove LeadStatus column
A_sub = A_df[ , -which(names(A_df) %in% c("LeadStatus"))]
B_sub = B_df[ , -which(names(B_df) %in% c("LeadStatus"))]
C_sub = C_df[ , -which(names(C_df) %in% c("LeadStatus"))]
D_sub = D_df[ , -which(names(D_df) %in% c("LeadStatus"))]
E_sub = E_df # study E does not have the LeadStatus column!
combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub) # combine datasets
combined_df$totalP=rowSums(combined_df[,c("P1","P2","P3","P4","P5","P6","P7")])
combined_df$totalN=rowSums(combined_df[,c("N1","N2","N3","N4","N5","N6","N7")])
combined_df$totalG=rowSums(combined_df[,c("G1","G2","G3","G4","G5","G6","G7","G8","G9","G10","G11","G12","G13","G14","G15","G16")])
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(extrafont)
library(ggfortify)
library(ggsci)
#library(forecast)
#library(zoo)
library(extrafont)
#font_import()
#loadfonts(device = "win")
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
#remove LeadStatus column
A_sub = A_df[ , -which(names(A_df) %in% c("LeadStatus"))]
B_sub = B_df[ , -which(names(B_df) %in% c("LeadStatus"))]
C_sub = C_df[ , -which(names(C_df) %in% c("LeadStatus"))]
D_sub = D_df[ , -which(names(D_df) %in% c("LeadStatus"))]
E_sub = E_df # study E does not have the LeadStatus column!
combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub) # combine datasets
combined_df$totalP=rowSums(combined_df[,c("P1","P2","P3","P4","P5","P6","P7")])
combined_df$totalN=rowSums(combined_df[,c("N1","N2","N3","N4","N5","N6","N7")])
combined_df$totalG=rowSums(combined_df[,c("G1","G2","G3","G4","G5","G6","G7","G8","G9","G10","G11","G12","G13","G14","G15","G16")])
#Plot PANSS_Total vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
moving_average_day=30
combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(extrafont)
library(ggfortify)
library(ggsci)
#library(forecast)
#library(zoo)
library(extrafont)
#font_import()
#loadfonts(device = "win")
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
#remove LeadStatus column
A_sub = A_df[ , -which(names(A_df) %in% c("LeadStatus"))]
B_sub = B_df[ , -which(names(B_df) %in% c("LeadStatus"))]
C_sub = C_df[ , -which(names(C_df) %in% c("LeadStatus"))]
D_sub = D_df[ , -which(names(D_df) %in% c("LeadStatus"))]
E_sub = E_df # study E does not have the LeadStatus column!
combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub) # combine datasets
combined_df$totalP=rowSums(combined_df[,c("P1","P2","P3","P4","P5","P6","P7")])
combined_df$totalN=rowSums(combined_df[,c("N1","N2","N3","N4","N5","N6","N7")])
combined_df$totalG=rowSums(combined_df[,c("G1","G2","G3","G4","G5","G6","G7","G8","G9","G10","G11","G12","G13","G14","G15","G16")])
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
#ggsave(plotname,p,width=6,height=6,units="in",dpi="retina")
print(p)
#Plot given PANSS score vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
i = 9
#for (i in 9:38) {
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=combined_df_treated[,i],col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=combined_df_control[,i],col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
#}
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=totalP,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=totalP,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
study = E_sub
treated = study[which(study$TxGroup == "Treatment"),]
control = study[which(study$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_jitter(data=treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
#attach(combined_df)
lm.fit=lm(PANSS_Total~VisitDay+VisitDay:TxGroup, data=combined_df)
contrasts(combined_df$TxGroup) # display encoding for treatment
summary(lm.fit)
combined_df_zero = combined_df[which(combined_df$VisitDay==0),] # 0 day values for all patients
combined_df$deltaPANSS = combined_df$PANSS_Total
for (id in combined_df_zero$PatientID){
zeroValue = combined_df_zero[which(combined_df_zero$PatientID==id),]$PANSS_Total # integer zero value
combined_df[which(combined_df$PatientID==id),]$deltaPANSS =     combined_df[which(combined_df$PatientID==id),]$PANSS_Total - zeroValue # calculate difference from start to finish
}
#Plot PANSS_Total vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
moving_average_day=30
combined_df_treated$roll=rollmean(combined_df_treated$deltaPANSS,moving_average_day,na.pad=TRUE)
?lm
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
ggsave(plotname,p,width=6,height=6,units="in",dpi="retina")
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
ggsave("plotname",p,width=6,height=6,units="in",dpi="retina")
?ggsave
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
ggsave("Figures/panss_total_vs_visit_day",p,device = "pdf",width=6,height=6,units="in",dpi="retina")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(extrafont)
library(ggfortify)
library(ggsci)
#library(forecast)
#library(zoo)
library(extrafont)
#font_import()
#loadfonts(device = "win")
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
#remove LeadStatus column
A_sub = A_df[ , -which(names(A_df) %in% c("LeadStatus"))]
B_sub = B_df[ , -which(names(B_df) %in% c("LeadStatus"))]
C_sub = C_df[ , -which(names(C_df) %in% c("LeadStatus"))]
D_sub = D_df[ , -which(names(D_df) %in% c("LeadStatus"))]
E_sub = E_df # study E does not have the LeadStatus column!
combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub) # combine datasets
combined_df$totalP=rowSums(combined_df[,c("P1","P2","P3","P4","P5","P6","P7")])
combined_df$totalN=rowSums(combined_df[,c("N1","N2","N3","N4","N5","N6","N7")])
combined_df$totalG=rowSums(combined_df[,c("G1","G2","G3","G4","G5","G6","G7","G8","G9","G10","G11","G12","G13","G14","G15","G16")])
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
ggsave("Figures/panss_total_vs_visit_day",p,device = "pdf",width=6,height=6,units="in",dpi="retina")
?ggsave
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
# ggsave("Figures/panss_total_vs_visit_day",p,device = "pdf",width=6,height=6,units="in",dpi="retina")
ggsave("Figures/panss_total_vs_visit_day")
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
# ggsave("Figures/panss_total_vs_visit_day",p,device = "pdf",width=6,height=6,units="in",dpi="retina")
ggsave("Figures/panss_total_vs_visit_day",device="png")
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
# ggsave("Figures/panss_total_vs_visit_day",p,device = "pdf",width=6,height=6,units="in",dpi="retina")
ggsave("Figures/panss_total_vs_visit_day",device="png")
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
# ggsave("Figures/panss_total_vs_visit_day",p,device = "pdf",width=6,height=6,units="in",dpi="retina")
ggsave("Figures/panss_total_vs_visit_day",device="png",dpi="retina")
ggsave("Figures/panss_total_vs_visit_day.png",width=6,height=4,units="in",device="png",dpi="retina")
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
# ggsave("Figures/panss_total_vs_visit_day",p,device = "pdf",width=6,height=6,units="in",dpi="retina")
ggsave("Figures/panss_total_vs_visit_day.png",width=6,height=4,units="in",device="png",dpi="retina")
print(p)
