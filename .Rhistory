scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
?par
plot(p)
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
par(mfrow=c(3,1))
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=totalP,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=totalP,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
plot(p)
#print(p)
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
par(mfrow=c(3,1))
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=totalP,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=totalP,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
plot(p)
plot(p)
#print(p)
?par
par(mfrow=c(3,1))
plot(p)
plot(p)
par(mfrow=c(1,2))
plot(p)
plot(p)
category = totalP
category = combined_df$totalP
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=category,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=category,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
plot(p)
category = "totalP"
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=category,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=category,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
plot(p)
plot(p)
#print(p)
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=totalP,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=totalP,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
plot(p)
plot(p)
#print(p)
study = E_sub
treated = study[which(study$TxGroup == "Treatment"),]
control = study[which(study$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_jitter(data=treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
ggsave("Figures/panss_total_study_e.png",width=6,height=4,units="in",device="png",dpi="retina")
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=totalP,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=totalP,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
ggsave("Figures/panss_total_p.png",width=6,height=4,units="in",device="png",dpi="retina")
rint(p)
study = E_sub
treated = study[which(study$TxGroup == "Treatment"),]
control = study[which(study$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_jitter(data=treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_jitter(data=control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
ggsave("Figures/panss_total_study_e.png",width=6,height=4,units="in",device="png",dpi="retina")
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_jitter(data=combined_df_treated,aes(x=VisitDay,y=totalP,col="Treatment"),size=0.5)+
geom_jitter(data=combined_df_control,aes(x=VisitDay,y=totalP,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
ggsave("Figures/panss_total_p.png",width=6,height=4,units="in",device="png",dpi="retina")
rint(p)
study = E_sub
treated = study[which(study$TxGroup == "Treatment"),]
control = study[which(study$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_point(data=treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_point(data=control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
ggsave("Figures/panss_total_study_e.png",width=6,height=4,units="in",device="png",dpi="retina")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
#library(dplyr)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(extrafont)
library(ggfortify)
library(ggsci)
#library(forecast)
#library(zoo)
library(extrafont)
#font_import()
#loadfonts(device = "win")
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(E_df)
#remove LeadStatus column
A_sub = A_df[ , -which(names(A_df) %in% c("LeadStatus"))]
B_sub = B_df[ , -which(names(B_df) %in% c("LeadStatus"))]
C_sub = C_df[ , -which(names(C_df) %in% c("LeadStatus"))]
D_sub = D_df[ , -which(names(D_df) %in% c("LeadStatus"))]
E_sub = E_df # study E does not have the LeadStatus column!
combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub) # combine datasets
combined_df$totalP=rowSums(combined_df[,c("P1","P2","P3","P4","P5","P6","P7")])
combined_df$totalN=rowSums(combined_df[,c("N1","N2","N3","N4","N5","N6","N7")])
combined_df$totalG=rowSums(combined_df[,c("G1","G2","G3","G4","G5","G6","G7","G8","G9","G10","G11","G12","G13","G14","G15","G16")])
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
# considered looking at a moving average
# moving_average_day=30
# combined_df_treated$roll=rollmean(combined_df_treated$PANSS_Total,moving_average_day,na.pad=TRUE)
# combined_df_control$roll=rollmean(combined_df_control$PANSS_Total,moving_average_day,na.pad=TRUE)
p = ggplot(NULL,aes())+
geom_point(data=combined_df_treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_point(data=combined_df_control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
#geom_line(data=combined_df_treated,aes(x=VisitDay,y=roll,col="Treatment"))+
#geom_line(data=combined_df_control,aes(x=VisitDay,y=roll,col="Control"))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
# ggsave("Figures/panss_total_vs_visit_day",p,device = "pdf",width=6,height=6,units="in",dpi="retina")
ggsave("Figures/panss_total_vs_visit_day.png",width=6,height=4,units="in",device="png",dpi="retina")
print(p)
#Plot given PANSS score vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
i = 9 # to prevent an overabundance of output in the html/pdf document
#for (i in 9:38) {
p = ggplot(NULL,aes())+
geom_point(data=combined_df_treated,aes(x=VisitDay,y=combined_df_treated[,i],col="Treatment"),size=0.5)+
geom_point(data=combined_df_control,aes(x=VisitDay,y=combined_df_control[,i],col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
#}
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_point(data=combined_df_treated,aes(x=VisitDay,y=totalP,col="Treatment"),size=0.5)+
geom_point(data=combined_df_control,aes(x=VisitDay,y=totalP,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
ggsave("Figures/panss_total_p.png",width=6,height=4,units="in",device="png",dpi="retina")
print(p)
study = E_sub
treated = study[which(study$TxGroup == "Treatment"),]
control = study[which(study$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_point(data=treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_point(data=control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
ggsave("Figures/panss_total_study_e.png",width=6,height=4,units="in",device="png",dpi="retina")
#attach(combined_df)
lm.fit=lm(PANSS_Total~VisitDay+VisitDay:TxGroup, data=combined_df)
contrasts(combined_df$TxGroup) # display encoding for treatment
summary(lm.fit)
combined_df$totalP=rowSums(combined_df[,c("P1","P2","P3","P4","P5","P6","P7")])
combined_df$totalN=rowSums(combined_df[,c("N1","N2","N3","N4","N5","N6","N7")])
combined_df$totalG=rowSums(combined_df[,c("G1","G2","G3","G4","G5","G6","G7","G8","G9","G10","G11","G12","G13","G14","G15","G16")])
#attach(combined_df)
lm.fit.p=lm(totalP~VisitDay+VisitDay:TxGroup, data=combined_df)
lm.fit.n=lm(totalN~VisitDay+VisitDay:TxGroup, data=combined_df)
lm.fit.g=lm(totalG~VisitDay+VisitDay:TxGroup, data=combined_df)
summary(lm.fit.p)
summary(lm.fit.n)
summary(lm.fit.g)
study = D_sub
treated = study[which(study$TxGroup == "Treatment"),]
control = study[which(study$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_point(data=treated,aes(x=VisitDay,y=PANSS_Total,col="Treatment"),size=0.5)+
geom_point(data=control,aes(x=VisitDay,y=PANSS_Total,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
ggsave("Figures/panss_total_study_d.png",width=6,height=4,units="in",device="png",dpi="retina")
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_point(data=combined_df_treated,aes(x=VisitDay,y=totalP,col="Treatment"),size=0.5)+
geom_point(data=combined_df_control,aes(x=VisitDay,y=totalP,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
ggsave("Figures/panss_total_p.png",width=6,height=4,units="in",device="png",dpi="retina")
print(p)
p + facet_grid(cols = vars(fl))
#Plot total for each category vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
p = ggplot(NULL,aes())+
geom_point(data=combined_df_treated,aes(x=VisitDay,y=totalP,col="Treatment"),size=0.5)+
geom_point(data=combined_df_control,aes(x=VisitDay,y=totalP,col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
ggsave("Figures/panss_total_p.png",width=6,height=4,units="in",device="png",dpi="retina")
print(p)
p + facet_grid(cols = vars(3))
?facet_grid
p <- ggplot(mpg, aes(displ, cty)) + geom_point()
p
p + facet_grid(rows = vars(drv))
#Plot given PANSS score vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
i =1 # to prevent an overabundance of output in the html/pdf document
#for (i in 9:38) {
p = ggplot(NULL,aes())+
geom_point(data=combined_df_treated,aes(x=VisitDay,y=combined_df_treated[,i],col="Treatment"),size=0.5)+
geom_point(data=combined_df_control,aes(x=VisitDay,y=combined_df_control[,i],col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
#}
#Plot given PANSS score vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
i =2 # to prevent an overabundance of output in the html/pdf document
#for (i in 9:38) {
p = ggplot(NULL,aes())+
geom_point(data=combined_df_treated,aes(x=VisitDay,y=combined_df_treated[,i],col="Treatment"),size=0.5)+
geom_point(data=combined_df_control,aes(x=VisitDay,y=combined_df_control[,i],col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
#}
#Plot given PANSS score vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
i =3# to prevent an overabundance of output in the html/pdf document
#for (i in 9:38) {
p = ggplot(NULL,aes())+
geom_point(data=combined_df_treated,aes(x=VisitDay,y=combined_df_treated[,i],col="Treatment"),size=0.5)+
geom_point(data=combined_df_control,aes(x=VisitDay,y=combined_df_control[,i],col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
#}
#Plot given PANSS score vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
i =38# to prevent an overabundance of output in the html/pdf document
#for (i in 9:38) {
p = ggplot(NULL,aes())+
geom_point(data=combined_df_treated,aes(x=VisitDay,y=combined_df_treated[,i],col="Treatment"),size=0.5)+
geom_point(data=combined_df_control,aes(x=VisitDay,y=combined_df_control[,i],col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
#}
#Plot given PANSS score vs Visit Day, for patients and control
combined_df_treated=combined_df[which(combined_df$TxGroup == "Treatment"),]
combined_df_control=combined_df[which(combined_df$TxGroup == "Control"),]
i =37# to prevent an overabundance of output in the html/pdf document
#for (i in 9:38) {
p = ggplot(NULL,aes())+
geom_point(data=combined_df_treated,aes(x=VisitDay,y=combined_df_treated[,i],col="Treatment"),size=0.5)+
geom_point(data=combined_df_control,aes(x=VisitDay,y=combined_df_control[,i],col="Control"),size=0.5)+
scale_color_manual(values=rev(pal_aaas("default")(2)))+
theme_minimal()+
theme(legend.position = "top",legend.title=element_blank(),plot.title=element_text(hjust=0.5,size=10,family="Lato"),plot.subtitle=element_text(hjust=0.5,size=8,family="Lato"),text=element_text(size=10,family="Lato"))
print(p)
#}
?save
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(hexbin)
library(RColorBrewer)
library(ggrepel)
library(ggfortify)
library(extrafont)
library(factoextra)
library("FactoMineR")
library(NbClust)
library(cluster)
library(clValid)
library(ggfortify)
A_df=read.csv("Data/Study_A.csv")
B_df=read.csv("Data/Study_B.csv")
C_df=read.csv("Data/Study_C.csv")
D_df=read.csv("Data/Study_D.csv")
E_df=read.csv("Data/Study_E.csv")
summary(A_df)
A_df = subset(A_df, VisitDay==0)
B_df = subset(B_df, VisitDay==0)
C_df = subset(C_df, VisitDay==0)
D_df = subset(D_df, VisitDay==0)
E_df = subset(E_df, VisitDay==0)
A_sub = A_df[ , -which(names(A_df) %in% c("Study","Country","PatientID","SiteID","RaterID",
"AssessmentiD","TxGroup","VisitDay","PANSS_Total","LeadStatus"))]
B_sub = B_df[ , -which(names(B_df) %in% c("Study","Country","PatientID","SiteID","RaterID",
"AssessmentiD","TxGroup","VisitDay","PANSS_Total","LeadStatus"))]
C_sub = C_df[ , -which(names(C_df) %in% c("Study","Country","PatientID","SiteID","RaterID",
"AssessmentiD","TxGroup","VisitDay","PANSS_Total","LeadStatus"))]
D_sub = D_df[ , -which(names(D_df) %in% c("Study","Country","PatientID","SiteID","RaterID",
"AssessmentiD","TxGroup","VisitDay","PANSS_Total","LeadStatus"))]
E_sub = E_df[ , -which(names(E_df) %in% c("Study","Country","PatientID","SiteID","RaterID",
"AssessmentiD","TxGroup","VisitDay","PANSS_Total","LeadStatus"))]
names(A_sub)
combined_df = rbind(A_sub,B_sub,C_sub,D_sub,E_sub)
A_scale = scale(A_sub)
B_scale = scale(B_sub)
C_scale = scale(C_sub)
D_scale = scale(D_sub)
E_scale = scale(E_sub)
scaled_df = scale(combined_df)
summary(scaled_df)
#cvalid.out = clValid(scaled_df, maxitems = 3000, nClust = 2:8,
#                     clMethods = c("kmeans","pam"), validation = c("internal", "stability"))
#summary(cvalid.out)
# Elbow method
fviz_nbclust(scaled_df, kmeans, method = "wss",print.summary=TRUE) +
geom_vline(xintercept = 2, linetype = 2)+
labs(subtitle = "Elbow method")
# Silhouette method
fviz_nbclust(scaled_df, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
# Gap statistic
# nboot = 50 to keep the function speedy. Number of Monte Carlo ("bootstrap") samples.
# recommended value: nboot= 500 for your analysis.
# Use verbose = FALSE to hide computing progression.
# set.seed(1)
# gc()
# fviz_nbclust(scaled_df, kmeans,k.max = 10,iter.max=30,nstart = 25,method="gap_stat",nboot = 500)+
#   labs(subtitle = "Gap statistic method")
# NbClust(data = scaled_df, distance = "euclidean", min.nc = 2, max.nc = 10, method = "kmeans");
set.seed(1)
chosen_k = 2
km.out = kmeans(scaled_df, chosen_k, nstart = 50)
km.clusters =km.out$cluster
# stats
km.out$tot.withinss # total within-cluster sum of squares
km.out$withinss # within-cluster sum of squares
km.out$size # cluster size
# visualize
fviz_cluster(km.out, scaled_df,geom = c("point"))
# Elbow method
fviz_nbclust(scaled_df, pam, method = "wss",print.summary=TRUE) +
geom_vline(xintercept = 2, linetype = 2)+
labs(subtitle = "Elbow method")
# Silhouette method
fviz_nbclust(scaled_df, pam, method = "silhouette")+
labs(subtitle = "Silhouette method")
# Gap statistic
# nboot = 50 to keep the function speedy. Number of Monte Carlo ("bootstrap") samples.
# recommended value: nboot= 500 for your analysis.
# Use verbose = FALSE to hide computing progression.
#set.seed(1)
#fviz_nbclust(scaled_df, k.max = 10, pam,method="gap_stat",nboot = 50)+
#  labs(subtitle = "Gap statistic method")
pam.res <- pam(scaled_df, chosen_k)
# Visualize pam clustering
fviz_cluster(pam.res, geom = "point")
pca.out = prcomp(scaled_df, scale=TRUE)
ggplot2::autoplot(pca.out, label = FALSE, loadings.label = TRUE)
pcaCharts <- function(x) {
x.var <- x$sdev ^ 2
x.pvar <- x.var/sum(x.var)
print("proportions of variance:")
print(x.pvar)
par(mfrow=c(2,2))
plot(x.pvar,xlab="Principal component",
ylab="Proportion of variance explained", ylim=c(0,1), type='b')
plot(cumsum(x.pvar),xlab="Principal component",
ylab="Cumulative Proportion of variance explained", ylim=c(0,1), type='b')
screeplot(x)
screeplot(x,type="l")
par(mfrow=c(1,1))
}
# check proportion of variance explained by each component
pcaCharts(pca.out)
pca.out$rotation[,1:3]
res.pca = PCA(scaled_df, graph = FALSE)
print(res.pca)
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 50))
# Graph of variables: default plot
fviz_pca_var(res.pca, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1, top = 10)
# Contributions of variables to PC2
fviz_contrib(res.pca, choice = "var", axes = 2, top = 10)
# Contributions of variables to PC2
fviz_contrib(res.pca, choice = "var", axes = 3, top = 10)
omission_vector = c("Country","PatientID","SiteID","RaterID",
"AssessmentiD","TxGroup","VisitDay","PANSS_Total","LeadStatus")
combined_all_col = rbind(A_df[ , -which(names(A_df) %in% omission_vector)],B_df[ , -which(names(A_df) %in% omission_vector)],C_df[ , -which(names(A_df) %in% omission_vector)],D_df[ , -which(names(A_df) %in% omission_vector)],E_df[ , -which(names(A_df) %in% omission_vector)])
res.pca <- prcomp(combined_all_col[,-1],  scale = TRUE)
fviz(res.pca, "ind", label = "none",habillage=combined_all_col$Study,addEllipses = "True",alpha=0.3,ellipse.type = "convex") # Individuals plot
res.pca <- prcomp(combined_all_col[,-1],  scale = TRUE)
fviz(res.pca, "ind", label = "none",habillage=combined_all_col$Study,addEllipses = "True",alpha=0.3) # Individuals plot
omission_vector = c("Study","PatientID","SiteID","RaterID",
"AssessmentiD","TxGroup","VisitDay","PANSS_Total","LeadStatus")
combined_all_col = rbind(A_df[ , -which(names(A_df) %in% omission_vector)],B_df[ , -which(names(A_df) %in% omission_vector)],C_df[ , -which(names(A_df) %in% omission_vector)],D_df[ , -which(names(A_df) %in% omission_vector)],E_df[ , -which(names(A_df) %in% omission_vector)])
library(plyr)
sort(table(combined_all_col$Country),decreasing=TRUE)
# consider only top 5 countries
countries = c("USA","China","Russia","Japan","Ukraine")
top_5_country_df = subset(combined_all_col, Country %in% countries)
sum(table(top_5_country_df$Country))/sum(table(combined_all_col$Country)) # these countries make up 80%
res.pca <- prcomp(top_5_country_df[,-1],  scale = TRUE)
fviz(res.pca, "ind", label = "none",habillage=top_5_country_df$Country,addEllipses = TRUE,alpha=0.5,ellipse.alpha = 0.25)
#keep country this time
A_sub_hc=A_df[,-which(names(A_df) %in% c("Study","PatientID","SiteID","RaterID","AssessmentiD",
"TxGroup","VisitDay","PANSS_Total","LeadStatus"))]
B_sub_hc=B_df[,-which(names(B_df) %in% c("Study","PatientID","SiteID","RaterID","AssessmentiD",
"TxGroup","VisitDay","PANSS_Total","LeadStatus"))]
C_sub_hc=C_df[,-which(names(C_df) %in% c("Study","PatientID","SiteID","RaterID","AssessmentiD",
"TxGroup","VisitDay","PANSS_Total","LeadStatus"))]
D_sub_hc=D_df[,-which(names(D_df) %in% c("Study","PatientID","SiteID","RaterID","AssessmentiD",
"TxGroup","VisitDay","PANSS_Total","LeadStatus"))]
E_sub_hc=E_df[,-which(names(E_df) %in% c("Study","PatientID","SiteID","RaterID","AssessmentiD",
"TxGroup","VisitDay","PANSS_Total","LeadStatus"))]
names(A_sub)
combined_df_hc = rbind(A_sub_hc,B_sub_hc,C_sub_hc,D_sub_hc,E_sub_hc)
combined.data=combined_df_hc[,2:31]
combined.labs=combined_df_hc[,1]
scaled_data = scale(combined.data)
summary(scaled_data)
summary(combined.labs)
# commented out since was receiving error
#combined_df$Country=combined.labs
#combined_df$Cluster=km.out$cluster
#head(combined_df)
#clust1_df=combined_df[which(combined_df$Cluster==1),]
#clust2_df=combined_df[which(combined_df$Cluster==2),]
#clust3_df=combined_df[which(combined_df$Cluster==3),]
#clust4_df=combined_df[which(combined_df$Cluster==4),]
#par(mfrow=c(2,2))
#hist.c1=barplot(prop.table(table(as.factor(clust1_df$Country))),las=2)
#hist.c2=barplot(prop.table(table(as.factor(clust2_df$Country))),las=2)
#hist.c3=barplot(prop.table(table(as.factor(clust3_df$Country))),las=2)
#hist.c4=barplot(prop.table(table(as.factor(clust4_df$Country))),las=2)
#hc.complete=hclust (dist(combined.data),method="complete")
#par(mfrow =c(1,1))
#plot(hc.complete,labels=combined.labs,main="Complete Linkage",xlab="",sub="",ylab="")
#fviz_dend(hc.complete,labels=combined.labs)
# Compute hierarchical clustering and cut into 4 clusters
#res <- hcut(scaled_df, k = 4, stand = TRUE)
# Visualize
#fviz_dend(res, rect = TRUE, cex = 0.5,
#          k_colors = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"))
